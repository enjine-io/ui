{
  "style": "background-color: #121212; color: #fff; margin-bottom: 100px;",
  "homeName": "UI Controls",
  "homeLink": "ui/Controls",
  "pages": [
    {
      "title_124": {
        "txt": "title_124"
      },
      "text_126": {
        "txt": "text_126",
        "css": ""
      },
      "img_127": {
        "src": "img1.png",
        "style": "",
        "alt": "img_127"
      },
      "img_128": {
        "src": "img2.png",
        "style": "",
        "alt": "img_128"
      },
      "text_129": {
        "txt": "text_129",
        "css": ""
      },
      "code_130": {
        "txt": "drw = ui.addDrawer(lay, options)",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_131": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_131": {
        "content": [
          "layout ",
          "Layout",
          "The drawer layout where to add controls. "
        ]
      },
      "table-row_132": {
        "content": [
          "options ",
          "String",
          "A comma separated options.nVariant: `Permanent`, `Persistent`, `Temporary`\\nAnchor: `Left`, `Right`, `Top`, `Bottom` "
        ]
      },
      "table-row_133": {
        "content": [
          "width ",
          "Number",
          "Fraction of the screen width starting from the anchor position `[0-1]`. "
        ]
      },
      "table-footer_133": {
        "txt": ""
      },
      "text_134": {
        "txt": "This will return a <span class=\"bold jdocs-return-type\"> Drawer Component</span>"
      },
      "hr_135": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "heading_135": {
        "txt": "heading_135"
      },
      "text_136": {
        "txt": "text_136",
        "css": ""
      },
      "table-header_140": {
        "content": [
          "Properties",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_141": {
        "content": [
          "anchor ",
          "String",
          "Sets or returns the anchor position of the drawer. Values can be `left`, `top`, `right`, `bottom`."
        ]
      },
      "table-row_142": {
        "content": [
          "disabled ",
          "Boolean",
          "Sets or returns the `disabled` state of the drawer."
        ]
      },
      "table-row_143": {
        "content": [
          "swipeAreaWidth ",
          "Number",
          "Sets or returns the width of the swipeable area of the Drawer."
        ]
      },
      "table-row_144": {
        "content": [
          "width ",
          "Number",
          "Sets or returns the width of the drawer as a fraction of the screen viewport relative to its anchor position `[0-1]`."
        ]
      },
      "table-footer_144": {
        "txt": ""
      },
      "hr_145": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "heading_145": {
        "txt": "heading_145"
      },
      "text_146": {
        "txt": "text_146",
        "css": ""
      },
      "hr_147": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_147": {
        "txt": "subtitle_147"
      },
      "text_148": {
        "txt": "text_148",
        "css": ""
      },
      "table-header_149": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_149": {
        "content": [
          "lay ",
          "Layout",
          "Layout component. "
        ]
      },
      "table-footer_149": {
        "txt": ""
      },
      "hr_150": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_150": {
        "txt": "subtitle_150"
      },
      "text_151": {
        "txt": "text_151",
        "css": ""
      },
      "code_152": {
        "txt": "drw.disableSwipeToOpen( value )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_153": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_153": {
        "content": [
          "value ",
          "Boolean",
          "Values can be `true` or `false`. "
        ]
      },
      "table-footer_153": {
        "txt": ""
      },
      "hr_154": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_154": {
        "txt": "subtitle_154"
      },
      "text_155": {
        "txt": "text_155",
        "css": ""
      },
      "code_156": {
        "txt": "drw.disableBackdropTransition( value )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_157": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_157": {
        "content": [
          "value ",
          "Boolean",
          "Values can be `true` or `false`. "
        ]
      },
      "table-footer_157": {
        "txt": ""
      },
      "hr_158": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_158": {
        "txt": "subtitle_158"
      },
      "text_159": {
        "txt": "text_159",
        "css": ""
      },
      "code_160": {
        "txt": "drw.disableDiscovery( value )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_161": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_161": {
        "content": [
          "value ",
          "Boolean",
          "Values can be `true` or `false`. "
        ]
      },
      "table-footer_161": {
        "txt": ""
      },
      "hr_162": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_162": {
        "txt": "subtitle_162"
      },
      "text_163": {
        "txt": "text_163",
        "css": ""
      },
      "code_164": {
        "txt": "drw.setOnOpen(callback)",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_165": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_165": {
        "content": [
          "callback ",
          "Function",
          "The callback function. "
        ]
      },
      "table-footer_165": {
        "txt": ""
      },
      "hr_166": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_166": {
        "txt": "subtitle_166"
      },
      "text_167": {
        "txt": "text_167",
        "css": ""
      },
      "code_168": {
        "txt": "drw.setOnClose(callback)",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_169": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_169": {
        "content": [
          "callback ",
          "Function",
          "The callback function. "
        ]
      },
      "table-footer_169": {
        "txt": ""
      },
      "hr_170": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_170": {
        "txt": "subtitle_170"
      },
      "text_171": {
        "txt": "text_171",
        "css": ""
      },
      "code_172": {
        "txt": "drw.show( anchor )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_173": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_173": {
        "content": [
          "anchor ",
          "String",
          "Optional. The anchor position. Can be `left`, `top`, `right`, `bottom`. Default is `left`. "
        ]
      },
      "table-footer_173": {
        "txt": ""
      },
      "hr_174": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_174": {
        "txt": "subtitle_174"
      },
      "text_175": {
        "txt": "text_175",
        "css": ""
      },
      "code_176": {
        "txt": "drw.hide()",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "hr_177": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "heading_177": {
        "txt": "heading_177"
      },
      "hr_178": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "code_177": {
        "txt": "class Main extends App\n{\n   onStart()\n   {\n       // Creates a fullscreen layout with objects vertically centered.\n       this.main = ui.addLayout( \"main\", \"Linear\", \"VCenter,FillXY\")\n\n       // Add a fixed appbar with menu icon to the main layout.\n       this.apb = ui.addAppBar(this.main, \"My App\", \"Menu,Fixed\")\n\n       // Add a callback handler for `onMenu` event of the AppBar control.\n       this.apb.setOnMenu( this.openDrawer )\n\n       // Add a text control to the main layout.\n       ui.addText(this.main, \"<---- Swipe left ----->\", \"Center\");\n\n       // Create a linear layout for the drawer.\n       this.drawerLay = ui.addLayout(null, \"Linear\")\n\n       // Initialize the drawer by passing the drawer layout above.\n       this.drawer = ui.addDrawer(this.drawerLay, \"left\", 0.7)\n\n       // Add a callback handler for `onClose` event on the Drawer component.\n       this.drawer.setOnClose( this.onClose )\n\n       var lst1 = [\n           [ \"music_note\", \"Audios\" ],\n           [ \"movie\", \"Videos\" ],\n           [ \"insert_drive_file\", \"Documents\" ]\n       ]\n\n       // Adds a list to the drawer layout. See List control for customization.\n       this.lstMenu1 = ui.addList( this.drawerLay, lst1, \"Icon\", 1 )\n       this.lstMenu1.label = \"Main navigation\"\n\n       // Add a callback handler for `onSelect` event on the list.\n       this.lstMenu1.setOnTouch( this.onSelect )\n\n       // Adds a divider into the drawer layout.\n       ui.addDivider( this.drawerLay, 1 )\n\n       var lst2 = [\n           [ \"mail\", \"All Mail\" ],\n           [ \"inbox\", \"Inbox\" ],\n           [ \"drafts\", \"Outbox\" ],\n           [ \"send\", \"Sent\" ]\n       ]\n\n       // Adds another list to the drawer layout. See List control for customization.\n       this.lstMenu2 = ui.addList( this.drawerLay, lst2, \"Icon\", 1 )\n       this.lstMenu2.label = \"Secondary navigation\"\n       this.lstMenu2.setOnTouch( this.onSelect )\n   }\n\n   openDrawer()\n   {\n       this.drawer.show()\n   }\n\n   onSelect(title)\n   {\n       this.apb.text = title\n       ui.showPopup( title )\n       this.drawer.hide()\n   }\n\n   onClose()\n   {\n       ui.showPopup('Drawer is close', \"bottom\")\n   }\n}",
        "sample": "Drawer Implementation"
      },
      "code_178": {
        "txt": "class Main extends App\n{\n   onStart()\n   {\n       // Creates a fullscreen layout with objects vertically centered.\n       this.main = ui.addLayout( \"main\", \"Linear\", \"VCenter,FillXY\")\n\n       // Adds a select control to the main layout.\n       this.sel = ui.addSelect(this.main, [\"Left\", \"Top\", \"Right\", \"Bottom\"], \"Radio,Outlined\", 0.7)\n       this.sel.label = \"Select anchor position\"\n\n       // Add a callback handler for `onChange` event of the select control.\n       this.sel.setOnChange(this.onSelect)\n\n       // Creates a linear layout for the drawer.\n       this.drawerLay = ui.addLayout( null, \"Linear\" )\n\n       // Initialize the drawer by passing the drawer layout.\n       this.drawer = ui.addDrawer( this.drawerLay, \"left\" )\n\n       var lst1 = [\n           [ \"music_note\", \"Audios\" ],\n           [ \"movie\", \"Videos\" ],\n           [ \"insert_drive_file\", \"Documents\" ]\n       ]\n\n       // Adds a list to the drawer layout.\n       this.lstMenu1 = ui.addList( this.drawerLay, lst1, \"Icon\", 1 )\n       this.lstMenu1.setOnTouch( this.closeDrawer )\n       this.lstMenu1.label = \"Main navigation\"\n\n       // Adds a divider into the drawer layout.\n       ui.addDivider( this.drawerLay, 1 )\n\n       var lst2 = [\n           [ \"mail\", \"All Mail\" ],\n           [ \"inbox\", \"Inbox\" ],\n           [ \"drafts\", \"Outbox\" ],\n           [ \"send\", \"Sent\" ]\n       ]\n\n       // Adds another list to the drawer layout.\n       this.lstMenu2 = ui.addList( this.drawerLay, lst2, \"Icon\", 1 )\n       this.lstMenu2.label = \"Secondary navigation\"\n       this.lstMenu2.setOnTouch( this.closeDrawer )\n   }\n\n   openDrawer()\n   {\n       this.drawer.show()\n   }\n\n   closeDrawer( title )\n   {\n       ui.showPopup( title )\n       this.drawer.hide()\n   }\n\n   onSelect( value )\n   {\n       // Set the drawer anchor first\n       this.drawer.anchor = value\n\n       // Set the drawer width depending on anchor position\n       if(value == \"Top\" || value == \"Bottom\") {\n           this.drawer.width = 0.5\n       } else {\n           this.drawer.width = 0.7\n       }\n       \n       // Open the drawer\n       this.drawer.show()\n   }\n}",
        "sample": "Drawer Anchor Positions"
      }
    }
  ]
}