{
  "langs": [
    "English",
    "Deutsch",
    "Español",
    "Français",
    "Português",
    "Русский",
    "Italiano"
  ],
  "codes": {
    "english": "en",
    "deutsch": "de",
    "español": "es",
    "français": "fr",
    "português": "pt",
    "русский": "ru",
    "italiano": "it"
  },
  "trans": {
    "title_124": {
      "en": " Stepper ",
      "de": "",
      "es": ""
    },
    "text_126": {
      "en": "A Stepper in mobile UI design is a navigation element that guides users through a multi-step process, typically used for forms or sequential tasks. In Material Design, it provides clear indicators of progress and allows users to navigate forward and backward through steps, ensuring a structured and user-friendly experience in mobile applications.",
      "de": "",
      "es": ""
    },
    "text_129": {
      "en": "Add a stepper into your app using the `addStepper` method like this:",
      "de": "",
      "es": ""
    },
    "text_137": {
      "en": "For `Mobile` option, an additional position options can be added `Top`, `Static` or `Bottom` and `AutoSwipe` to enable auto swiping.",
      "de": "",
      "es": ""
    },
    "text_138": {
      "en": "To style step count text, pass `Fraction`, `Dots` or `Progress` options.",
      "de": "",
      "es": ""
    },
    "text_139": {
      "en": "For `vertical` and `mobile`, you can add Layout type `Linear` or `Absolute`",
      "de": "",
      "es": ""
    },
    "heading_140": {
      "en": "Properties",
      "de": "",
      "es": ""
    },
    "text_141": {
      "en": "Here are the available setters and getters of the Stepper Component.",
      "de": "",
      "es": ""
    },
    "heading_178": {
      "en": "Methods",
      "de": "",
      "es": ""
    },
    "text_179": {
      "en": "Here are the methods available for Stepper Component.",
      "de": "",
      "es": ""
    },
    "subtitle_180": {
      "en": "setOnComplete",
      "de": "",
      "es": ""
    },
    "text_181": {
      "en": "Adds a callback function to be called when the stepper is complete. For mobile stepper, callback will be called upon showing the last step.",
      "de": "",
      "es": ""
    },
    "subtitle_184": {
      "en": "setOnChange",
      "de": "",
      "es": ""
    },
    "text_185": {
      "en": "Adds a callback function to be called when the stepper has changed step.",
      "de": "",
      "es": ""
    },
    "subtitle_188": {
      "en": "nextStep",
      "de": "",
      "es": ""
    },
    "text_189": {
      "en": "Go to the next step.",
      "de": "",
      "es": ""
    },
    "subtitle_191": {
      "en": "previousStep",
      "de": "",
      "es": ""
    },
    "text_192": {
      "en": "Go to the previous step.",
      "de": "",
      "es": ""
    },
    "subtitle_194": {
      "en": "getLayout",
      "de": "",
      "es": ""
    },
    "text_195": {
      "en": "Returns the layout of the corresponding step layout where you can add controls.",
      "de": "",
      "es": ""
    },
    "subtitle_199": {
      "en": "getLayoutIndex",
      "de": "",
      "es": ""
    },
    "text_200": {
      "en": "Get the index of the corresponding layout.",
      "de": "",
      "es": ""
    },
    "subtitle_204": {
      "en": "removeStep",
      "de": "",
      "es": ""
    },
    "text_205": {
      "en": "Removes a corresponding step by its index.",
      "de": "",
      "es": ""
    },
    "subtitle_208": {
      "en": "setTitleText",
      "de": "",
      "es": ""
    },
    "text_209": {
      "en": "Sets a new title for the corresponding step by its index.",
      "de": "",
      "es": ""
    },
    "heading_213": {
      "en": "Examples",
      "de": "",
      "es": ""
    },
    "subtitle_31": {
      "en": "setOnContextMenu",
      "de": "",
      "es": ""
    },
    "text_32": {
      "en": "Adds a callback function on right click.",
      "de": "",
      "es": ""
    },
    "subtitle_35": {
      "en": "animate",
      "de": "",
      "es": ""
    },
    "text_36": {
      "en": "Animate the component.",
      "de": "",
      "es": ""
    },
    "subtitle_40": {
      "en": "setSize",
      "de": "",
      "es": ""
    },
    "text_41": {
      "en": "Sets the size of the component.",
      "de": "",
      "es": ""
    },
    "subtitle_45": {
      "en": "show",
      "de": "",
      "es": ""
    },
    "text_46": {
      "en": "Show the component.",
      "de": "",
      "es": ""
    },
    "subtitle_48": {
      "en": "hide",
      "de": "",
      "es": ""
    },
    "text_49": {
      "en": "Hide the component.",
      "de": "",
      "es": ""
    },
    "subtitle_51": {
      "en": "gone",
      "de": "",
      "es": ""
    },
    "text_52": {
      "en": "Destroy the component.",
      "de": "",
      "es": ""
    },
    "subtitle_54": {
      "en": "destroy",
      "de": "",
      "es": ""
    },
    "text_55": {
      "en": "Destroy the component.",
      "de": "",
      "es": ""
    },
    "subtitle_57": {
      "en": "setScale",
      "de": "",
      "es": ""
    },
    "text_58": {
      "en": "Sets the x and y scaling of the component.",
      "de": "",
      "es": ""
    },
    "subtitle_62": {
      "en": "getPosition",
      "de": "",
      "es": ""
    },
    "text_63": {
      "en": "Returns the position of the component. The return object is of the form `{left, top, right, bottom}`",
      "de": "",
      "es": ""
    },
    "subtitle_67": {
      "en": "setMargins",
      "de": "",
      "es": ""
    },
    "text_68": {
      "en": "Sets the margin of the component.",
      "de": "",
      "es": ""
    },
    "subtitle_75": {
      "en": "setPadding",
      "de": "",
      "es": ""
    },
    "text_76": {
      "en": "Sets the padding of the component's container.",
      "de": "",
      "es": ""
    },
    "subtitle_83": {
      "en": "setPosition",
      "de": "",
      "es": ""
    },
    "text_84": {
      "en": "Sets the position of the component relative to its parent dimensions.",
      "de": "",
      "es": ""
    },
    "subtitle_89": {
      "en": "setBorder",
      "de": "",
      "es": ""
    },
    "text_90": {
      "en": "Sets the border line for the component container.",
      "de": "",
      "es": ""
    },
    "subtitle_98": {
      "en": "setCornerRadius",
      "de": "",
      "es": ""
    },
    "text_99": {
      "en": "Sets the corner radius of the component.",
      "de": "",
      "es": ""
    },
    "subtitle_106": {
      "en": "bringForward",
      "de": "",
      "es": ""
    },
    "text_107": {
      "en": "Bring this component forward by a given z-index.",
      "de": "",
      "es": ""
    },
    "subtitle_110": {
      "en": "sendBackward",
      "de": "",
      "es": ""
    },
    "text_111": {
      "en": "Bring this component backward by a given z-index.",
      "de": "",
      "es": ""
    }
  }
}