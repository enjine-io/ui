{
  "style": "background-color: #121212; color: #fff; margin-bottom: 100px;",
  "homeName": "UI Controls",
  "homeLink": "ui/Controls",
  "pages": [
    {
      "title_124": {
        "txt": "title_124"
      },
      "text_126": {
        "txt": "text_126",
        "css": ""
      },
      "img_127": {
        "src": "img1.png",
        "style": "",
        "alt": "img_127"
      },
      "img_128": {
        "src": "img2.png",
        "style": "",
        "alt": "img_128"
      },
      "text_129": {
        "txt": "text_129",
        "css": ""
      },
      "code_130": {
        "txt": "list = ui.addList(parent, list, options, width, height)",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_131": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_131": {
        "content": [
          "parent ",
          "Layout",
          "The parent layout "
        ]
      },
      "table-row_132": {
        "content": [
          "list ",
          "Array",
          "An array of arrays. Each element is of the form `[icon, title, body, secondary]` "
        ]
      },
      "table-row_133": {
        "content": [
          "options ",
          "String",
          "A comma separated options.\\nMedia: `Icon`, `Avatar`\\nStyling: `Dense`, `Inset`\\nUtils: `Selectable`, `Divider`, `SecondaryText`, `NoRipple`, `NoScrollBar` "
        ]
      },
      "table-row_134": {
        "content": [
          "width ",
          "Number",
          "Fraction of the parent width `[0-1]`. "
        ]
      },
      "table-row_135": {
        "content": [
          "height ",
          "Number",
          "Fraction of the parent height `[0-1]`. "
        ]
      },
      "table-footer_135": {
        "txt": ""
      },
      "text_136": {
        "txt": "This will return a <span class=\"bold jdocs-return-type\"> List Component</span>"
      },
      "text_137": {
        "txt": "text_137",
        "css": ""
      },
      "text_138": {
        "txt": "text_138",
        "css": ""
      },
      "text_139": {
        "txt": "text_139",
        "css": ""
      },
      "text_140": {
        "txt": "text_140",
        "css": ""
      },
      "hr_141": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "heading_141": {
        "txt": "heading_141"
      },
      "text_142": {
        "txt": "text_142",
        "css": ""
      },
      "table-header_157": {
        "content": [
          "Properties",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_158": {
        "content": [
          "absHeight ",
          "Number",
          "Returns the absolute height of the control in pixels."
        ]
      },
      "table-row_159": {
        "content": [
          "absLeft ",
          "Number",
          "Returns the absolute distance of the control from the left in pixels."
        ]
      },
      "table-row_160": {
        "content": [
          "absTop ",
          "Number",
          "Returns the absolute distance of the control from the top in pixels."
        ]
      },
      "table-row_161": {
        "content": [
          "absWidth ",
          "Number",
          "Returns the absolute width of the control in pixels."
        ]
      },
      "table-row_162": {
        "content": [
          "avatarSize ",
          "String",
          "Sets or returns the size of the avatar. Values can be `Small` `Medium` `Large`"
        ]
      },
      "table-row_163": {
        "content": [
          "avatarVariant ",
          "String",
          "Sets or returns the variant of the avatar. Values can be `Square` `Round` or `Circle`"
        ]
      },
      "table-row_164": {
        "content": [
          "backColor ",
          "String",
          "Sets or returns the background color in a hexadecimal format."
        ]
      },
      "table-row_165": {
        "content": [
          "backImage ",
          "String",
          "The path to your image file."
        ]
      },
      "table-row_166": {
        "content": [
          "border ",
          "Number",
          "Sets or returns the border thickness in pixels."
        ]
      },
      "table-row_167": {
        "content": [
          "borderColor ",
          "String",
          "Sets or returns the border color. Color is in hexadecimal form `#rrggbb`"
        ]
      },
      "table-row_168": {
        "content": [
          "borderStyle ",
          "String",
          "Sets or returns the border style. Values can be `dotted`, `dashed`, `solid`, `double`, `groove`, `ridge`, `inset` and `outset`. Default is `solid`."
        ]
      },
      "table-row_169": {
        "content": [
          "checkboxColor ",
          "String",
          "Sets or returns the theme color of the checkbox when `Selectable` option is enabled. Vaues can be `Default` `Primary` or `Secondary`"
        ]
      },
      "table-row_170": {
        "content": [
          "cornerRadius ",
          "Number",
          "Sets or returns the corner radius in pixels."
        ]
      },
      "table-row_171": {
        "content": [
          "disabled ",
          "Boolean",
          "Sets or returns the `disabled` state of the control."
        ]
      },
      "table-row_172": {
        "content": [
          "el ",
          "Object",
          "Returns the html container element for the control."
        ]
      },
      "table-row_173": {
        "content": [
          "elStyle ",
          "String",
          "Sets the style of the html container element."
        ]
      },
      "table-row_174": {
        "content": [
          "elevation ",
          "Number",
          "Sets or returns the depth of the list container. Values range from 0 to 24."
        ]
      },
      "table-row_175": {
        "content": [
          "fontFile ",
          "String",
          "Sets or returns the `relative` path to the font-family use."
        ]
      },
      "table-row_176": {
        "content": [
          "height ",
          "Number",
          "Sets or returns the height of the control as a fraction of the parent control."
        ]
      },
      "table-row_177": {
        "content": [
          "iconColor ",
          "String",
          "Sets or returns the icon color in a hexadecimal format."
        ]
      },
      "table-row_178": {
        "content": [
          "iconSize ",
          "Number",
          "Sets or returns the size of the icon text."
        ]
      },
      "table-row_179": {
        "content": [
          "isVisible ",
          "Boolean",
          "Returns whether the control is visible or not."
        ]
      },
      "table-row_180": {
        "content": [
          "itemPadding ",
          "Array",
          "Sets or returns the padding of each list item. See also `setItemPadding` method."
        ]
      },
      "table-row_181": {
        "content": [
          "label ",
          "String",
          "Sets or returns the label text."
        ]
      },
      "table-row_182": {
        "content": [
          "left ",
          "Number",
          "Returns the distance of the control from the left."
        ]
      },
      "table-row_183": {
        "content": [
          "margins ",
          "Array",
          "Sets or returns the margin of the control. Works on controls with `Linear` parent only. You can also pass a number to set equal margins for all sides."
        ]
      },
      "table-row_184": {
        "content": [
          "opacity ",
          "Number",
          "Sets or returns the opacity of the control."
        ]
      },
      "table-row_185": {
        "content": [
          "options ",
          "String",
          "Sets or returns the `options` of the control."
        ]
      },
      "table-row_186": {
        "content": [
          "outlined ",
          "Boolean",
          "Sets or returns whether the container is outlined or elevated."
        ]
      },
      "table-row_187": {
        "content": [
          "padding ",
          "Array",
          "Sets or returns the padding of the control. You can also pass a number to set equal padding for all sides."
        ]
      },
      "table-row_188": {
        "content": [
          "parent ",
          "Object",
          "Returns the parent layout control."
        ]
      },
      "table-row_189": {
        "content": [
          "position ",
          "Object",
          "Returns the position of the control. The returned object has `left` `top` `right` and `bottom` props."
        ]
      },
      "table-row_190": {
        "content": [
          "rotation ",
          "Number",
          "Sets or returns the angle of rotation in degrees."
        ]
      },
      "table-row_191": {
        "content": [
          "selectable ",
          "Boolean",
          "Sets or returns a boolean whether the list is selectable or not."
        ]
      },
      "table-row_192": {
        "content": [
          "textColor ",
          "String",
          "Sets or returns the color of the text."
        ]
      },
      "table-row_193": {
        "content": [
          "textColor1 ",
          "String",
          "Sets or returns the color of the title text in hexadecimal format."
        ]
      },
      "table-row_194": {
        "content": [
          "textColor2 ",
          "String",
          "Sets or returns the color of the body text in hexadecimal format."
        ]
      },
      "table-row_195": {
        "content": [
          "textSize ",
          "Number",
          "Sets or returns the size of the text within the control."
        ]
      },
      "table-row_196": {
        "content": [
          "textSize1 ",
          "Number",
          "Sets or returns the size of the title text."
        ]
      },
      "table-row_197": {
        "content": [
          "textSize2 ",
          "Number",
          "Sets or returns the size of the body text."
        ]
      },
      "table-row_198": {
        "content": [
          "top ",
          "Number",
          "Returns the distance of the control from the top."
        ]
      },
      "table-row_199": {
        "content": [
          "type ",
          "String",
          "Returns the type of the control."
        ]
      },
      "table-row_200": {
        "content": [
          "visibility ",
          "String",
          "Sets or returns the visibility of the control."
        ]
      },
      "table-row_201": {
        "content": [
          "width ",
          "Number",
          "Sets or returns the width of the control as a fraction of the parent control."
        ]
      },
      "table-footer_201": {
        "txt": ""
      },
      "hr_202": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "heading_202": {
        "txt": "heading_202"
      },
      "text_203": {
        "txt": "text_203",
        "css": ""
      },
      "hr_204": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_204": {
        "txt": "subtitle_204"
      },
      "text_205": {
        "txt": "text_205",
        "css": ""
      },
      "code_206": {
        "txt": "lst.addItem( title, body, image, index )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_207": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_207": {
        "content": [
          "title ",
          "String",
          "The title of the item. "
        ]
      },
      "table-row_208": {
        "content": [
          "body ",
          "String",
          "The text description of the item. "
        ]
      },
      "table-row_209": {
        "content": [
          "image ",
          "String",
          "A material icon or image file path. "
        ]
      },
      "table-row_210": {
        "content": [
          "action ",
          "String",
          "A text for the action or material icon. "
        ]
      },
      "table-row_211": {
        "content": [
          "index ",
          "Number",
          "The index in which to add or insert the item. "
        ]
      },
      "table-footer_211": {
        "txt": ""
      },
      "hr_212": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_212": {
        "txt": "subtitle_212"
      },
      "text_213": {
        "txt": "text_213",
        "css": ""
      },
      "code_214": {
        "txt": "lst.setOnTouch( callback )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_215": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_215": {
        "content": [
          "callback ",
          "Function",
          "The callback function to be called. This will pass  `title <i class=\"arg-def\">String</i>` The list item title text. `body <i class=\"arg-def\">String</i>` The list item body text. `icon <i class=\"arg-def\">String</i>` The list item icon. `action <i class=\"arg-def\">String</i>` The action text. `index <i class=\"arg-def\">Number</i>` The list item index. `pos <i class=\"arg-def\">Object</i>` The position of the touch event."
        ]
      },
      "table-footer_215": {
        "txt": ""
      },
      "hr_216": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_216": {
        "txt": "subtitle_216"
      },
      "text_217": {
        "txt": "text_217",
        "css": ""
      },
      "code_218": {
        "txt": "lst.setOnLongTouch( callback )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_219": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_219": {
        "content": [
          "callback ",
          "Function",
          "The callback function to be called. This will pass  `title <i class=\"arg-def\">String</i>` The list item title. `body <i class=\"arg-def\">String</i>` The list item description text. `icon <i class=\"arg-def\">String</i>` The list item icon. `action <i class=\"arg-def\">String</i>`  The action text. `index <i class=\"arg-def\">Number</i>` The list item index. `pos <i class=\"arg-def\">Object</i>` The position of the touch event."
        ]
      },
      "table-footer_219": {
        "txt": ""
      },
      "hr_220": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_220": {
        "txt": "subtitle_220"
      },
      "text_221": {
        "txt": "text_221",
        "css": ""
      },
      "code_222": {
        "txt": "lst.setOnSelect( callback )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_223": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_223": {
        "content": [
          "callback ",
          "Function",
          "The callback function to be called. This will pass  `title <i class=\"arg-def\">String</i>` The list item title text. `index <i class=\"arg-def\">Number</i>` The index of the selected list item. `checked <i class=\"arg-def\">Boolean</i>` The checked state of the list item."
        ]
      },
      "table-footer_223": {
        "txt": ""
      },
      "hr_224": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_224": {
        "txt": "subtitle_224"
      },
      "code_225": {
        "txt": "lst.setOnAction( callback )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "text_226": {
        "txt": "text_226",
        "css": ""
      },
      "table-header_227": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_227": {
        "content": [
          "callback ",
          "Function",
          "The callback function. This will pass  `icon <i class=\"arg-def\">String</i>` The icon text. `index <i class=\"arg-def\">Number</i>` The index of the corresponding secondary action."
        ]
      },
      "table-footer_227": {
        "txt": ""
      },
      "hr_228": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_228": {
        "txt": "subtitle_228"
      },
      "text_229": {
        "txt": "text_229",
        "css": ""
      },
      "code_230": {
        "txt": "lst.setOnContextMenu( callback )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_231": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_231": {
        "content": [
          "callback ",
          "Function",
          "The callback function to be called on context menu event or right click event. This will pass  `title <i class=\"arg-def\">String</i>` The list item title text. `body <i class=\"arg-def\">String</i>` The list item body text. `icon <i class=\"arg-def\">String</i>` The list item icon. `action <i class=\"arg-def\">String</i>` The action text. `index <i class=\"arg-def\">Number</i>` The list item index. `pos <i class=\"arg-def\">Object</i>` The position of the touch event."
        ]
      },
      "table-footer_231": {
        "txt": ""
      },
      "hr_232": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_232": {
        "txt": "subtitle_232"
      },
      "code_233": {
        "txt": "lst.getSelectedItems()",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "text_234": {
        "txt": "text_234",
        "css": ""
      },
      "hr_235": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_235": {
        "txt": "subtitle_235"
      },
      "code_236": {
        "txt": "lst.getSelectedTitles()",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "text_237": {
        "txt": "text_237",
        "css": ""
      },
      "hr_238": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_238": {
        "txt": "subtitle_238"
      },
      "text_239": {
        "txt": "text_239",
        "css": ""
      },
      "code_240": {
        "txt": "lst.setList( list )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_241": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_241": {
        "content": [
          "list ",
          "Array",
          "A comma separated list of items or an array. See the list format above. "
        ]
      },
      "table-footer_241": {
        "txt": ""
      },
      "hr_242": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_242": {
        "txt": "subtitle_242"
      },
      "text_243": {
        "txt": "text_243",
        "css": ""
      },
      "code_244": {
        "txt": "lst.setSelectable( selectable )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_245": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_245": {
        "content": [
          "selectable ",
          "Boolean",
          "If true, make the list selectable. Otherwise, list is not selectable "
        ]
      },
      "table-footer_245": {
        "txt": ""
      },
      "hr_246": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_246": {
        "txt": "subtitle_246"
      },
      "text_247": {
        "txt": "text_247",
        "css": ""
      },
      "code_248": {
        "txt": "lst.setItemByIndex(index, newTitle, newBody, newIcon, newAction)",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_249": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_249": {
        "content": [
          "index ",
          "Number",
          "The index of the item to update "
        ]
      },
      "table-row_250": {
        "content": [
          "newTitle ",
          "String",
          "The new title of the item "
        ]
      },
      "table-row_251": {
        "content": [
          "newBody ",
          "String",
          "The new body text "
        ]
      },
      "table-row_252": {
        "content": [
          "newIcon ",
          "String",
          "The new icon or image "
        ]
      },
      "table-row_253": {
        "content": [
          "newAction ",
          "String",
          "The new action icon or action text "
        ]
      },
      "table-footer_253": {
        "txt": ""
      },
      "hr_254": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_254": {
        "txt": "subtitle_254"
      },
      "text_255": {
        "txt": "text_255",
        "css": ""
      },
      "code_256": {
        "txt": "lst.getItemByIndex(index, json)",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_257": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_257": {
        "content": [
          "index ",
          "Number",
          "Returns the corresponding list item. "
        ]
      },
      "table-row_258": {
        "content": [
          "json ",
          "Boolean",
          "Pass `true` to return the corresponding list item as an object of the form `{title,body,image,action "
        ]
      },
      "table-footer_258": {
        "txt": ""
      },
      "hr_259": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_259": {
        "txt": "subtitle_259"
      },
      "text_260": {
        "txt": "text_260",
        "css": ""
      },
      "code_261": {
        "txt": "lst.setItem( title, newTitle, newBody, newIcon )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_262": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_262": {
        "content": [
          "title ",
          "String",
          "The title of the list item to update. "
        ]
      },
      "table-row_263": {
        "content": [
          "newTitle ",
          "String",
          "The new title of the list item. "
        ]
      },
      "table-row_264": {
        "content": [
          "newBody ",
          "String",
          "The new description of the list item. "
        ]
      },
      "table-row_265": {
        "content": [
          "newIcon ",
          "String",
          "A material icon font or image file path. "
        ]
      },
      "table-row_266": {
        "content": [
          "newAction ",
          "String",
          "A material icon font for the action icon button. "
        ]
      },
      "table-footer_266": {
        "txt": ""
      },
      "hr_267": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_267": {
        "txt": "subtitle_267"
      },
      "text_268": {
        "txt": "text_268",
        "css": ""
      },
      "code_269": {
        "txt": "lst.getItem(title, json)",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_270": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_270": {
        "content": [
          "title ",
          "String",
          "Title of the list item. "
        ]
      },
      "table-row_271": {
        "content": [
          "json ",
          "Boolean",
          "Pass `true` to return the corresponding list item as an object of the form `{title,body,image,action "
        ]
      },
      "table-footer_271": {
        "txt": ""
      },
      "hr_272": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_272": {
        "txt": "subtitle_272"
      },
      "text_273": {
        "txt": "text_273",
        "css": ""
      },
      "code_274": {
        "txt": "lst.removeItemByIndex( index )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_275": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_275": {
        "content": [
          "index ",
          "Number",
          "The index of the item to remove "
        ]
      },
      "table-footer_275": {
        "txt": ""
      },
      "hr_276": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_276": {
        "txt": "subtitle_276"
      },
      "text_277": {
        "txt": "text_277",
        "css": ""
      },
      "code_278": {
        "txt": "lst.removeItemByName( name )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_279": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_279": {
        "content": [
          "name ",
          "String",
          "The title of the list to remove. "
        ]
      },
      "table-footer_279": {
        "txt": ""
      },
      "hr_280": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_280": {
        "txt": "subtitle_280"
      },
      "text_281": {
        "txt": "text_281",
        "css": ""
      },
      "code_282": {
        "txt": "lst.shiftItem()",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "hr_283": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_283": {
        "txt": "subtitle_283"
      },
      "text_284": {
        "txt": "text_284",
        "css": ""
      },
      "code_285": {
        "txt": "lst.popItem()",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "hr_286": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_286": {
        "txt": "subtitle_286"
      },
      "text_287": {
        "txt": "text_287",
        "css": ""
      },
      "code_288": {
        "txt": "lst.deselectAll()",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "hr_289": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_289": {
        "txt": "subtitle_289"
      },
      "text_290": {
        "txt": "text_290",
        "css": ""
      },
      "code_291": {
        "txt": "lst.selectItemByIndex( index )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_292": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_292": {
        "content": [
          "index ",
          "Number",
          "The index to be selected. "
        ]
      },
      "table-footer_292": {
        "txt": ""
      },
      "hr_293": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_293": {
        "txt": "subtitle_293"
      },
      "text_294": {
        "txt": "text_294",
        "css": ""
      },
      "code_295": {
        "txt": "lst.setTitleText( index, title )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_296": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_296": {
        "content": [
          "index ",
          "Number",
          "The index of the corresponding list item. "
        ]
      },
      "table-row_297": {
        "content": [
          "title ",
          "String",
          "The new title text. "
        ]
      },
      "table-footer_297": {
        "txt": ""
      },
      "hr_298": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_298": {
        "txt": "subtitle_298"
      },
      "text_299": {
        "txt": "text_299",
        "css": ""
      },
      "code_300": {
        "txt": "lst.setBodyText( index, newText )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_301": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_301": {
        "content": [
          "index ",
          "Number",
          "The index of the list whose secondary text to be changed. "
        ]
      },
      "table-row_302": {
        "content": [
          "newText ",
          "String",
          "The new secondary text. "
        ]
      },
      "table-footer_302": {
        "txt": ""
      },
      "hr_303": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_303": {
        "txt": "subtitle_303"
      },
      "text_304": {
        "txt": "text_304",
        "css": ""
      },
      "code_305": {
        "txt": "lst.setIcon( index, icon )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_306": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_306": {
        "content": [
          "index ",
          "Number",
          "The index of the corresponding list item. "
        ]
      },
      "table-row_307": {
        "content": [
          "icon ",
          "String",
          "Material icon font. "
        ]
      },
      "table-footer_307": {
        "txt": ""
      },
      "hr_308": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_308": {
        "txt": "subtitle_308"
      },
      "text_309": {
        "txt": "text_309",
        "css": ""
      },
      "code_310": {
        "txt": "acc.setCornerRadius(tl, tr, bl, br, mode)",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_311": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_311": {
        "content": [
          "tl ",
          "Number",
          "Top-left corner radius. "
        ]
      },
      "table-row_312": {
        "content": [
          "tr ",
          "Number",
          "Top-right corner radius. "
        ]
      },
      "table-row_313": {
        "content": [
          "bl ",
          "Number",
          "Bottom-left corner radius. "
        ]
      },
      "table-row_314": {
        "content": [
          "br ",
          "Number",
          "Bottom-right corner radius. "
        ]
      },
      "table-row_315": {
        "content": [
          "mode ",
          "String",
          "Unit. Values are `px` `rem` or `%`. "
        ]
      },
      "table-footer_315": {
        "txt": ""
      },
      "hr_316": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_316": {
        "txt": "subtitle_316"
      },
      "text_317": {
        "txt": "text_317",
        "css": ""
      },
      "code_318": {
        "txt": "lst.setItemPadding(left, top, right, bottom, mode)",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_319": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_319": {
        "content": [
          "left ",
          "Number",
          "Left padding of the list item. "
        ]
      },
      "table-row_320": {
        "content": [
          "top ",
          "Number",
          "Top padding of the list item. "
        ]
      },
      "table-row_321": {
        "content": [
          "right ",
          "Number",
          "Right padding of the list item. "
        ]
      },
      "table-row_322": {
        "content": [
          "bottom ",
          "Number",
          "Bottom padding of the list item. "
        ]
      },
      "table-row_323": {
        "content": [
          "mode ",
          "String",
          "Unit of measurement. Can be `rem`, `px`, `%`, or `v` for viewport. "
        ]
      },
      "table-footer_323": {
        "txt": ""
      },
      "hr_324": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_35": {
        "txt": "subtitle_35"
      },
      "text_36": {
        "txt": "text_36",
        "css": ""
      },
      "code_37": {
        "txt": "lst.animate(anim, duration)",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_38": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_38": {
        "content": [
          "anim ",
          "String",
          "The type of animation. Here are the available values\\n`bounce`, `flash`, `pulse`, `rubberBand`, `shakeX`, `shakeY`, `headShake`, `swing`, `tada`, `wobble`, `jello`, `heartBeat`,\\nBack Entrances: `backInDown`, `backInLeft`, `backInRight`, `backInUp`\\nBack Exits: `backOutDown`, `backOutLeft`, `backOutRight`, `backOutUp`\\nBouncing Entrances: `bounceIn`, `bounceInDown`, `bounceInLeft`, `bounceInRight`, `bounceInUp`\\nBouncing exits: `bounceOut`, `bounceOutDown`, `bounceOutLeft`, `bounceOutRight`, `bounceOutUp`\\nFading entrances: `fadeIn`, `fadeInDown`, `fadeInDownBig`, `fadeInLeft`, `fadeInLeftBig`, `fadeInRight`, `fadeInRightBig`, `fadeInUp`, `fadeInUpBig`, `fadeInTopLeft`, `fadeInTopRight`, `fadeInBottomLeft`, `fadeInBottomRight`\\nFading exits: `fadeOut`, `fadeOutDown`, `fadeOutDownBig`, `fadeOutLeft`, `fadeOutLeftBig`, `fadeOutRight`, `fadeOutRightBig`, `fadeOutUp`, `fadeOutUpBig`, `fadeOutTopLeft`, `fadeOutTopRight`, `fadeOutBottomRight`, `fadeOutBottomLeft`\\nFlippers: `flip`, `flipInX`, `flipInY`, `flipOutX`, `flipOutY`\\nLightspeed: `lightSpeedInRight`, `lightSpeedInLeft`, `lightSpeedOutRight`, `lightSpeedOutLeft`\\nRotating Entrances: `rotateIn`, `rotateInDownLeft`, `rotateInDownRight`, `rotateInUpLeft`, `rotateInUpRight`\\nRotating Exits: `rotateOut`, `rotateOutDownLeft`, `rotateOutDownRight`, `rotateOutUpLeft`, `rotateOutUpRight`\\nSpecials: `hinge`, `jackInTheBox`, `rollIn`, `rollOut`\\nZooming Entrances: `zoomIn`, `zoomInDown`, `zoomInLeft`, `zoomInRight`, `zoomInUp`\\nZooming Exits: `zoomOut`, `zoomOutDown`, `zoomOutLeft`, `zoomOutRight`, `zoomOutUp`\\nSliding Entrances: `slideInDown`, `slideInLeft`, `slideInRight`, `slideInUp`\\nSliding Exits: `slideOutDown`, `slideOutLeft`, `slideOutRight`, `slideOutUp` "
        ]
      },
      "table-row_39": {
        "content": [
          "duration ",
          "Number",
          "The time in milliseconds. "
        ]
      },
      "table-footer_39": {
        "txt": ""
      },
      "hr_40": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_40": {
        "txt": "subtitle_40"
      },
      "text_41": {
        "txt": "text_41",
        "css": ""
      },
      "code_42": {
        "txt": "lst.setSize( width, height )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_43": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_43": {
        "content": [
          "width ",
          "Number",
          "Fraction of the parent width. [0-1] "
        ]
      },
      "table-row_44": {
        "content": [
          "height ",
          "Number",
          "Fraction of the parent height. [0-1] "
        ]
      },
      "table-footer_44": {
        "txt": ""
      },
      "hr_45": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_45": {
        "txt": "subtitle_45"
      },
      "text_46": {
        "txt": "text_46",
        "css": ""
      },
      "code_47": {
        "txt": "lst.show()",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "hr_48": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_48": {
        "txt": "subtitle_48"
      },
      "text_49": {
        "txt": "text_49",
        "css": ""
      },
      "code_50": {
        "txt": "lst.hide()",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "hr_51": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_51": {
        "txt": "subtitle_51"
      },
      "text_52": {
        "txt": "text_52",
        "css": ""
      },
      "code_53": {
        "txt": "lst.gone()",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "hr_54": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_54": {
        "txt": "subtitle_54"
      },
      "text_55": {
        "txt": "text_55",
        "css": ""
      },
      "code_56": {
        "txt": "lst.destroy()",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "hr_57": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_57": {
        "txt": "subtitle_57"
      },
      "text_58": {
        "txt": "text_58",
        "css": ""
      },
      "code_59": {
        "txt": "lst.setScale( x, y )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_60": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_60": {
        "content": [
          "x ",
          "Number",
          "The x-scale of the component.Values less than `0` is smaller than the normal. While values greater than `1` is greater than the normal. "
        ]
      },
      "table-row_61": {
        "content": [
          "y ",
          "Number",
          "The y-scale of the component. Values less than `1` is smaller than the normal. While vaues greater than `1` is greater than the normal. "
        ]
      },
      "table-footer_61": {
        "txt": ""
      },
      "hr_62": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_62": {
        "txt": "subtitle_62"
      },
      "text_63": {
        "txt": "text_63",
        "css": ""
      },
      "code_64": {
        "txt": "lst.getPosition( options )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_65": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_65": {
        "content": [
          "options ",
          "String",
          "The mode of the measurements. Values can be `px` or `%` "
        ]
      },
      "table-footer_65": {
        "txt": ""
      },
      "text_66": {
        "txt": "This will return an <span class=\"bold jdocs-return-type\"> Object</span>"
      },
      "hr_67": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_67": {
        "txt": "subtitle_67"
      },
      "text_68": {
        "txt": "text_68",
        "css": ""
      },
      "code_69": {
        "txt": "lst.setMargins( left, top, right, bottom, mode )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_70": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_70": {
        "content": [
          "left ",
          "Number",
          "Left margin. You can also pass string e.g. `12rem` "
        ]
      },
      "table-row_71": {
        "content": [
          "top ",
          "Number",
          "Top margin. You can also pass string e.g. `12rem` "
        ]
      },
      "table-row_72": {
        "content": [
          "right ",
          "Number",
          "Right margin. You can also pass string e.g. `12rem` "
        ]
      },
      "table-row_73": {
        "content": [
          "bottom ",
          "Number",
          "Bottom margin. You can also pass string e.g. `12rem` "
        ]
      },
      "table-row_74": {
        "content": [
          "mode ",
          "String",
          "Unit of measurement.\\n`rem` for root em.\\n`px` for pixels\\n`%` relative to its parent dimension.\\n`v` relative to viewport dimension. "
        ]
      },
      "table-footer_74": {
        "txt": ""
      },
      "hr_75": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_75": {
        "txt": "subtitle_75"
      },
      "text_76": {
        "txt": "text_76",
        "css": ""
      },
      "code_77": {
        "txt": "lst.setPadding(left, top, right, bottom, mode)",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_78": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_78": {
        "content": [
          "left ",
          "Number",
          "Fraction of the component width. "
        ]
      },
      "table-row_79": {
        "content": [
          "top ",
          "Number",
          "Fraction of the component height. [0-1] "
        ]
      },
      "table-row_80": {
        "content": [
          "right ",
          "Number",
          "Fraction of the component width. [0-1] "
        ]
      },
      "table-row_81": {
        "content": [
          "bottom ",
          "Number",
          "Fraction of the component height. [0-1] "
        ]
      },
      "table-row_82": {
        "content": [
          "mode ",
          "String",
          "Unit of measurement.\\n`rem` for root em.\\n`px` for pixels\\n`%` relative to its parent dimensions\\n`v` relative to viewport dimensions. "
        ]
      },
      "table-footer_82": {
        "txt": ""
      },
      "hr_83": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_83": {
        "txt": "subtitle_83"
      },
      "text_84": {
        "txt": "text_84",
        "css": ""
      },
      "code_85": {
        "txt": "lst.setPosition( left, top, mode )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_86": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_86": {
        "content": [
          "left ",
          "Number",
          "Fraction of the parent width. [0-1] "
        ]
      },
      "table-row_87": {
        "content": [
          "top ",
          "Number",
          "Fraction of the parent height. [0-1] "
        ]
      },
      "table-row_88": {
        "content": [
          "mode ",
          "String",
          "Unit of measurement.\\n`rem` for root em.\\n`px` for pixels\\n`%` relative to its parent dimensions\\n`v` relative to viewport dimensions. "
        ]
      },
      "table-footer_88": {
        "txt": ""
      },
      "hr_89": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_89": {
        "txt": "subtitle_89"
      },
      "text_90": {
        "txt": "text_90",
        "css": ""
      },
      "code_91": {
        "txt": "lst.setBorder(left, top, right, bottom, clr, style)",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_92": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_92": {
        "content": [
          "left ",
          "Number",
          "Border-left thickness in pixels. "
        ]
      },
      "table-row_93": {
        "content": [
          "top ",
          "Number",
          "Border-top thickness in pixels. "
        ]
      },
      "table-row_94": {
        "content": [
          "right ",
          "Number",
          "Border-right thickness in pixels. "
        ]
      },
      "table-row_95": {
        "content": [
          "bottom ",
          "Number",
          "Border-bottom thickness in pixels. "
        ]
      },
      "table-row_96": {
        "content": [
          "clr ",
          "String",
          "Border color in hexadecimal format `#rrggbb`. "
        ]
      },
      "table-row_97": {
        "content": [
          "style ",
          "String",
          "Border-styles. Values can be `dotted`, `dashed`, `solid`, `double`, `groove`, `ridge`, `inset` and `outset`. Default is `solid` "
        ]
      },
      "table-footer_97": {
        "txt": ""
      },
      "hr_98": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_106": {
        "txt": "subtitle_106"
      },
      "text_107": {
        "txt": "text_107",
        "css": ""
      },
      "code_108": {
        "txt": "lst.bringForward( zIndex )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_109": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_109": {
        "content": [
          "zIndex ",
          "Number",
          "The z-index. A negative value behaves like `sendBackward` method. "
        ]
      },
      "table-footer_109": {
        "txt": ""
      },
      "hr_110": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "subtitle_110": {
        "txt": "subtitle_110"
      },
      "text_111": {
        "txt": "text_111",
        "css": ""
      },
      "code_112": {
        "txt": "lst.bringForward( zIndex )",
        "css": "background-color: black; padding: 16px 24px; font-weight:300;font-size:90%; margin: 6px 0px 24px 0px;"
      },
      "table-header_113": {
        "content": [
          "Parameters",
          "Type",
          "Description"
        ],
        "css": ""
      },
      "table-row_113": {
        "content": [
          "zIndex ",
          "Number",
          "The z-index. A positve value behaves like `bringForward` method. "
        ]
      },
      "table-footer_113": {
        "txt": ""
      },
      "hr_114": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "heading_324": {
        "txt": "heading_324"
      },
      "hr_325": {
        "txt": "",
        "css": "margin: 45px 0px;border-bottom:1px solid #212121;"
      },
      "code_324": {
        "txt": "class Main extends App\n{\n   onStart()\n   {\n       // Creates a fullscreen layout with objects vertically centered\n       this.main = ui.addLayout(\"main\", \"Linear\", \"VCenter,FillXY\")\n\n       // Initialize the list items to show\n       var list = [\"Javascript\", \"Java\", \"Python\"]\n\n       // Add a list control to the main layout\n       this.lst = ui.addList(this.main, list, \"\", 0.6)\n\n       // Adds a callback handler when the list is touched\n       this.lst.setOnTouch( this.onTouch )\n   }\n   \n   onTouch( title, body, icon, action, index )\n   {\n       ui.showPopup( title, \"Short\" )\n   }\n}",
        "sample": "Basic list"
      },
      "code_325": {
        "txt": "class Main extends App\n{\n   onStart()\n   {\n       // Creates a fullscreen layout with objects vertically centered.\n       this.main = ui.addLayout(\"main\", \"Linear\", \"VCenter\", 1, 1)\n       this.main.setChildMargins(0, 0, 0, 0.02)\n\n       // Initialize the list items to show\n       var list = [\n           [\"favorite\", \"Javascript\", \"This is a sample body text.\"],\n           [\"person\", \"Java\", \"This is a sample body text.\"],\n           [\"settings\", \"Python\", \"This is a sample body text.\"]\n       ]\n\n       // Add a list control with icon to the main layout\n       this.lst = ui.addList(this.main, list, \"Icon\", 0.8)\n\n       // Adds a callback handler when the list is touched\n       this.lst.setOnTouch( this.onTouch )\n\n       // Add a button control to the main layout\n       this.btn = ui.addButton(this.main, \"Change Icon Color\", \"Outlined\")\n\n       // Add a callback handler to change the icon color when the button is touched\n       this.btn.setOnTouch( this.changeIconColor )\n   }\n   \n   onTouch(title, body, icon, action, index)\n   {\n       ui.showPopup(title, \"Short\")\n   }\n\n   changeIconColor()\n   {\n       this.lst.iconColor = \"#e91e63\"\n   }\n}",
        "sample": "List with icon and body"
      },
      "code_326": {
        "txt": "class Main extends App\n{\n   onStart()\n   {\n       // Creates a fullscreen layout with objects vertically centered.\n       this.main = ui.addLayout(\"main\", \"Linear\", \"VCenter,FillXY\")\n\n       // Avatar url\n       var avatar = \"https://static.wikia.nocookie.net/heroes-and-villain/images/7/7e/Bilbo_BOFA_12.png/revision/latest/scale-to-width-down/350?cb=20190320192007\"\n       \n       // Initialize the contact items to show\n       var list = [\n           [avatar, \"Frodo\", \"+0123456789\"],\n           [avatar, \"Bilbo\", \"+0123456789\"],\n           [avatar, \"Well\", \"+0123456789\"]\n       ]\n\n       // Add a list control with avatar to the main layout\n       this.lst = ui.addList(this.main, list, \"Avatar\", 0.8)\n\n       // Adds a callback handler when the list is touched\n       this.lst.setOnTouch( this.onTouch )\n   }\n\n   onTouch(title, body, icon, action, index)\n   {\n       ui.showPopup(title + \" : \" +body, \"Short\")\n   }\n}",
        "sample": "Contacts list"
      },
      "code_327": {
        "txt": "class Main extends App\n{\n   onStart()\n   {\n       // Creates a fullscreen layout with objects vertically centered.\n       this.main = ui.addLayout(\"main\", \"Linear\", \"VCenter,FillXY\")\n\n       // Initialize the list items to show\n       var list = [\n           [\"favorite\", \"Javascript\", \"This is a sample body text.\"],\n           [\"person\", \"Java\", \"This is a sample body text.\"],\n           [\"settings\", \"Python\", \"This is a sample body text.\"]\n       ]\n\n       // Add an elevated list control to the main layout\n       this.lst = ui.addList(this.main, list, \"Icon,Elevated\", 0.8)\n\n       // Set the elevation depth to 5\n       this.lst.elevation = 5\n\n       // Set the list label\n       this.lst.label = \"This is a label text\"\n\n       // Adds a callback handler when the list is touched\n       this.lst.setOnTouch( this.onTouch )\n   }\n\n   onTouch(title, body, icon, action, index)\n   {\n       ui.showPopup(title + \" : \" +body, \"Short\")\n   }\n}",
        "sample": "Elevated list"
      },
      "code_328": {
        "txt": "class Main extends App\n{\n   onStart()\n   {\n       // Creates a fullscreen layout with objects vertically centered.\n       this.main = ui.addLayout(\"main\", \"Linear\", \"VCenter,FillXY\")\n\n       // Initialize the list items to show\n       var list = [\n           [\"favorite\", \"Javascript\", \"This is a sample body text.\"],\n           [\"person\", \"Java\", \"This is a sample body text.\"],\n           [\"settings\", \"Python\", \"This is a sample body text.\"]\n       ]\n\n       // Add an outlined list control to the main layout\n       this.lst = ui.addList(this.main, list, \"Icon,Outlined\", 0.8)\n       \n       // Set the list label\n       this.lst.label = \"My awesome list\"\n\n       // Set the corner radius to 12\n       this.lst.cornerRadius = 12\n\n       // Adds a callback handler when the list is touched\n       this.lst.setOnTouch( this.onTouch )\n   }\n\n   onTouch(title, body, icon, action, index)\n   {\n       ui.showPopup(title + \" : \" +body, \"Short\")\n   }\n}",
        "sample": "Outlined List"
      },
      "code_329": {
        "txt": "class Main extends App\n{\n   onStart()\n   {\n       // Creates a fullscreen layout with objects vertically centered.\n       this.main = ui.addLayout(\"main\", \"Linear\", \"VCenter,FillXY\")\n\n       var list = [\"Javascript\", \"Java\", \"Python\"]\n\n       // Add a list control to the main layout\n       this.lst = ui.addList(this.main, list, \"\", 0.6)\n\n       // Set the list label\n       this.lst.label = \"Long press any item to select\"\n\n       // Add on long touch event and set the list to selectable\n       this.lst.setOnLongTouch( this.onLongTouch   )\n\n       // Add `onSelect` event listener to the list\n       // and display the selected item in the popup\n       this.lst.setOnSelect( this.onSelect )\n   }\n\n   onLongTouch()\n   {\n       this.lst.selectable = true\n   }\n\n   onSelect(title, i, value)\n   {\n       ui. showPopup(title + \" : \" + value)\n   }\n}",
        "sample": "Selectable List"
      }
    }
  ]
}