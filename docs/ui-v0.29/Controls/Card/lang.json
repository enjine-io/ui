{
  "langs": [
    "English",
    "Deutsch",
    "Español",
    "Français",
    "Português",
    "Русский",
    "Italiano"
  ],
  "codes": {
    "english": "en",
    "deutsch": "de",
    "español": "es",
    "français": "fr",
    "português": "pt",
    "русский": "ru",
    "italiano": "it"
  },
  "trans": {
    "title_124": {
      "en": " Card",
      "de": "",
      "es": ""
    },
    "text_126": {
      "en": "They are surfaces in material design that display content and actions on a single topic. Elements, like text and images, should be placed on them in a way that clearly indicates hierarchy.",
      "de": "",
      "es": ""
    },
    "text_129": {
      "en": "Create a card using the initialization below",
      "de": "",
      "es": ""
    },
    "text_138": {
      "en": "<h4>Content properties</h4>",
      "de": "",
      "es": ""
    },
    "text_139": {
      "en": "`headerTitle` [string] : Card header title.",
      "de": "",
      "es": ""
    },
    "text_140": {
      "en": "`headerSubtitle` [string] : Card header subtitle or subheader.",
      "de": "",
      "es": ""
    },
    "text_141": {
      "en": "`headerAvatar` [string] : Card header avatar. Can be a single character or a path to an image.",
      "de": "",
      "es": ""
    },
    "text_142": {
      "en": "`headerAction` [string] : Card header action. A material icon font.",
      "de": "",
      "es": ""
    },
    "text_143": {
      "en": "`media` [string] : A path to an image.",
      "de": "",
      "es": ""
    },
    "text_144": {
      "en": "`bodyTitle` [string] : The title of the card content.",
      "de": "",
      "es": ""
    },
    "text_145": {
      "en": "`bodyText` [string] : The long description of the card.",
      "de": "",
      "es": ""
    },
    "text_146": {
      "en": "`actions` [array] : List of icon buttons. These can be a list of material-icon fonts if `actionType` is an `\"icon\"`.",
      "de": "",
      "es": ""
    },
    "text_147": {
      "en": "`actionType` [array] : The type of action. Can be a `\"button\"` or `\"icon\"`.",
      "de": "",
      "es": ""
    },
    "text_148": {
      "en": "`onAction` [function] : Callback handler when card actions are clicked. Refer to `setOnAction` method for arguments.",
      "de": "",
      "es": ""
    },
    "text_149": {
      "en": "`onHeaderAction` [function] : Callback handler when header action is clicked. Refer to `setOnHeaderAction` method for arguments.",
      "de": "",
      "es": ""
    },
    "heading_150": {
      "en": "Properties",
      "de": "",
      "es": ""
    },
    "text_151": {
      "en": "These are the available setter and getter properties for the Card component.",
      "de": "",
      "es": ""
    },
    "heading_207": {
      "en": "Methods",
      "de": "",
      "es": ""
    },
    "text_208": {
      "en": "These are the methods for `Card` component.",
      "de": "",
      "es": ""
    },
    "subtitle_209": {
      "en": "addHeaderItems",
      "de": "",
      "es": ""
    },
    "text_210": {
      "en": "Add header items to the card. Using this method is faster than setting the individual header property.",
      "de": "",
      "es": ""
    },
    "text_217": {
      "en": "Add card body items. Using this method is faster than setting the individual",
      "de": "",
      "es": ""
    },
    "subtitle_220": {
      "en": "setOnAction",
      "de": "",
      "es": ""
    },
    "text_221": {
      "en": "Add a callback function to be called when a card action is click.",
      "de": "",
      "es": ""
    },
    "subtitle_224": {
      "en": "setHeaderAction",
      "de": "",
      "es": ""
    },
    "text_225": {
      "en": "Add a callback function to be called when the header action icon is click.",
      "de": "",
      "es": ""
    },
    "heading_228": {
      "en": "Samples",
      "de": "",
      "es": ""
    },
    "subtitle_31": {
      "en": "setOnContextMenu",
      "de": "",
      "es": ""
    },
    "text_32": {
      "en": "Adds a callback function on right click.",
      "de": "",
      "es": ""
    },
    "subtitle_35": {
      "en": "animate",
      "de": "",
      "es": ""
    },
    "text_36": {
      "en": "Animate the component.",
      "de": "",
      "es": ""
    },
    "subtitle_40": {
      "en": "setSize",
      "de": "",
      "es": ""
    },
    "text_41": {
      "en": "Sets the size of the component.",
      "de": "",
      "es": ""
    },
    "subtitle_45": {
      "en": "show",
      "de": "",
      "es": ""
    },
    "text_46": {
      "en": "Show the component.",
      "de": "",
      "es": ""
    },
    "subtitle_48": {
      "en": "hide",
      "de": "",
      "es": ""
    },
    "text_49": {
      "en": "Hide the component.",
      "de": "",
      "es": ""
    },
    "subtitle_51": {
      "en": "gone",
      "de": "",
      "es": ""
    },
    "text_52": {
      "en": "Destroy the component.",
      "de": "",
      "es": ""
    },
    "subtitle_54": {
      "en": "destroy",
      "de": "",
      "es": ""
    },
    "text_55": {
      "en": "Destroy the component.",
      "de": "",
      "es": ""
    },
    "subtitle_57": {
      "en": "setScale",
      "de": "",
      "es": ""
    },
    "text_58": {
      "en": "Sets the x and y scaling of the component.",
      "de": "",
      "es": ""
    },
    "subtitle_62": {
      "en": "getPosition",
      "de": "",
      "es": ""
    },
    "text_63": {
      "en": "Returns the position of the component. The return object is of the form `{left, top, right, bottom}`",
      "de": "",
      "es": ""
    },
    "subtitle_67": {
      "en": "setMargins",
      "de": "",
      "es": ""
    },
    "text_68": {
      "en": "Sets the margin of the component.",
      "de": "",
      "es": ""
    },
    "subtitle_75": {
      "en": "setPadding",
      "de": "",
      "es": ""
    },
    "text_76": {
      "en": "Sets the padding of the component's container.",
      "de": "",
      "es": ""
    },
    "subtitle_83": {
      "en": "setPosition",
      "de": "",
      "es": ""
    },
    "text_84": {
      "en": "Sets the position of the component relative to its parent dimensions.",
      "de": "",
      "es": ""
    },
    "subtitle_89": {
      "en": "setBorder",
      "de": "",
      "es": ""
    },
    "text_90": {
      "en": "Sets the border line for the component container.",
      "de": "",
      "es": ""
    },
    "subtitle_98": {
      "en": "setCornerRadius",
      "de": "",
      "es": ""
    },
    "text_99": {
      "en": "Sets the corner radius of the component.",
      "de": "",
      "es": ""
    },
    "subtitle_106": {
      "en": "bringForward",
      "de": "",
      "es": ""
    },
    "text_107": {
      "en": "Bring this component forward by a given z-index.",
      "de": "",
      "es": ""
    },
    "subtitle_110": {
      "en": "sendBackward",
      "de": "",
      "es": ""
    },
    "text_111": {
      "en": "Bring this component backward by a given z-index.",
      "de": "",
      "es": ""
    }
  }
}